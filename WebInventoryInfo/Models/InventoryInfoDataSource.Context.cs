//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebInventoryInfo.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InventoryInformationEntities : DbContext
    {
        public InventoryInformationEntities()
            : base("name=InventoryInformationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Product> Products { get; set; }
    
        public virtual ObjectResult<uspGetProductAvailableQuanitity_Result> uspGetProductAvailableQuanitity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProductAvailableQuanitity_Result>("uspGetProductAvailableQuanitity");
        }
    
        public virtual ObjectResult<Nullable<decimal>> uspSaveProductPurchasedDetail(Nullable<int> productPurchasedId, Nullable<int> productId, Nullable<int> quantityPurchased, Nullable<decimal> unitPrice)
        {
            var productPurchasedIdParameter = productPurchasedId.HasValue ?
                new ObjectParameter("ProductPurchasedId", productPurchasedId) :
                new ObjectParameter("ProductPurchasedId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var quantityPurchasedParameter = quantityPurchased.HasValue ?
                new ObjectParameter("QuantityPurchased", quantityPurchased) :
                new ObjectParameter("QuantityPurchased", typeof(int));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("uspSaveProductPurchasedDetail", productPurchasedIdParameter, productIdParameter, quantityPurchasedParameter, unitPriceParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> uspSaveProductPurchasedMaster(Nullable<int> orderNumber, Nullable<System.DateTime> orderDate)
        {
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(int));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("uspSaveProductPurchasedMaster", orderNumberParameter, orderDateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> uspSaveProductSolddDetail(Nullable<int> productSolddId, Nullable<int> productId, Nullable<int> quantitySold)
        {
            var productSolddIdParameter = productSolddId.HasValue ?
                new ObjectParameter("ProductSolddId", productSolddId) :
                new ObjectParameter("ProductSolddId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var quantitySoldParameter = quantitySold.HasValue ?
                new ObjectParameter("QuantitySold", quantitySold) :
                new ObjectParameter("QuantitySold", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("uspSaveProductSolddDetail", productSolddIdParameter, productIdParameter, quantitySoldParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> uspSaveProductSoldMaster(Nullable<int> orderNumber, Nullable<System.DateTime> orderDate)
        {
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(int));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("uspSaveProductSoldMaster", orderNumberParameter, orderDateParameter);
        }
    
        public virtual ObjectResult<uspGetProductTransactionHistory_Result> uspGetProductTransactionHistory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProductTransactionHistory_Result>("uspGetProductTransactionHistory");
        }
    }
}
